{"name":"Tickit","tagline":"Open Source Support & Ticket System based on Symfony2 Framework","body":"<a href='http://travis-ci.org/#!/tickit-project/tickit'><img src='https://secure.travis-ci.org/tickit-project/tickit.png' /></a>\r\n<a href=\"https://www.versioneye.com/user/projects/51962575463e9a000200f930\" id=\"show_dep_badge_window\" role=\"button\" data-toggle=\"modal\"><img id=\"dependency_badge\" src=\"https://www.versioneye.com/user/projects/51962575463e9a000200f930/badge.png\"></a>\r\n<a href='https://coveralls.io/r/tickit-project/tickit?branch=development'><img src='https://coveralls.io/repos/tickit-project/tickit/badge.png?branch=development' alt='Coverage Status' /></a>\r\n<a href='https://insight.sensiolabs.com/projects/6df2a619-514e-4e42-b9b2-d7fdceeb357f'><img src='https://insight.sensiolabs.com/projects/6df2a619-514e-4e42-b9b2-d7fdceeb357f/mini.png' /></a>\r\n\r\n\r\n# Quick Setup Guide for Developers #\r\n\r\nTickit will eventually come with a self-installer, but whilst development is still on-going you get started with the project by\r\nrunning through these steps...\r\n\r\n1. Copy `app/config/parameters.yml.dist` to `app/config/parameters.yml` and add in your own database/mailer configuration.\r\n\r\n2. To correctly set the permissions on the `cache` and `logs` directories, run the following commands from your server (Debian based systems)\r\n\r\n        sudo setfacl -R -m u:www-data:rwx -m u:`whoami`:rwx app/cache app/logs\r\n        sudo setfacl -dR -m u:www-data:rwx -m u:`whoami`:rwx app/cache app/logs\r\n\r\n   The `www-data` user should be replaced with whatever user your apache / nginx service is running as\r\n\r\n\r\n3. Install Composer\r\n\r\n   As Symfony2 uses [Composer][1] to manage its dependencies, Tickit manages external libraries the same way.\r\n\r\n   If you don't have Composer yet, just run the following command from your project directory\r\n\r\n        curl -s http://getcomposer.org/installer | php\r\n\r\n   You then need to install vendor libraries using...\r\n\r\n        php composer.phar install\r\n\r\n   It should install all required vendor bundles.\r\n\r\n4. Run the following commands from the project directory in your terminal...\r\n\r\n        php app/console doctrine:database:create\r\n        php app/console doctrine:schema:create\r\n\r\n   This should create your database schema from the entities in the bundles located in the `src` folder. If there are any problems ensure that your database privileges and credentials are okay.\r\n\r\n5. Import data fixtures by running the following command in your project directory...\r\n\r\n        php app/console doctrine:fixtures:load\r\n\r\n6. Install NodeJS from http://nodejs.org\r\n\r\n7. Update your parameters.yml paths for `node_bin` to point to your node binary\r\n\r\n8. Install node modules...\r\n\r\n        cd app/Resources && npm install && cd ../../\r\n\r\n9. Install JS dependencies with bower...\r\n\r\n        bin/bower install\r\n\r\n[1]:  http://getcomposer.org/","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}